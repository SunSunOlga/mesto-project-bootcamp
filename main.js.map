{"version":3,"file":"main.js","mappings":"mBAQO,ICRMA,EAAcC,SAASC,cAAc,kBAE3C,SAASC,EAAQC,GACtBJ,EAAYK,QAAQD,EACtB,CCFA,IAAME,EAAS,CACbC,QAAS,2CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIpB,SAASC,EAAcC,GAEnB,OAAIA,EAAIC,GACCD,EAAIE,OAGNC,QAAQC,OAAO,WAADC,OAAYL,EAAIM,QACzC,CAEO,ICRDC,EAAejB,SAClBC,cAAc,kBACdiB,QAAQjB,cAAc,YAQlB,SAASkB,EAAWC,EAAMC,GAEdrB,SAASC,cAAc,YAAxC,IAEMqB,EAAcL,EAAaM,WAAU,GACrCC,EAAWF,EAAYrB,cAAc,qBACrCwB,EAAcH,EAAYrB,cAAc,qBACxCyB,EAAiBJ,EAAYrB,cAAc,oBAC3C0B,EAAmBL,EAAYrB,cAAc,sBAC7C2B,EAAiBN,EAAYrB,cAAc,yBAkCjD,SAAS4B,EAAeC,GAEtB,OAAOA,EAAMC,SAASV,EACxB,CAgCA,OAjEAG,EAASQ,YAAcZ,EAAKa,KAC5BR,EAAYS,IAAMd,EAAKe,KACvBV,EAAYW,IAAMhB,EAAKa,KACvBR,EAAYY,GAAKjB,EAAKkB,OAEtBV,EAAeI,YAAcZ,EAAKU,MAAMS,OAOpClB,IAAWD,EAAKoB,MAAW,IAC7Bb,EAAiBc,iBAAiB,SAAS,SAACC,GAC1C,IAhCqBC,EDsBCN,ECUhBO,EAAgBF,EAAIG,OAAOC,QAAQ,YAAY7C,cAAc,qBAAqBoC,IDVlEA,ECWVO,EDTTG,MAAM,GAADhC,OAAIV,EAAOC,QAAO,WAAAS,OAAUsB,GAAM,CAC5C9B,QAASF,EAAOE,QAChByC,OAAQ,WAETC,KAAKxC,ICKyBwC,MAjCNN,EAiCsBD,OAhC/CC,EAAME,OAAOC,QAAQ,YAAYI,WAgCoBC,MAAMC,QAAQC,IACjE,IAEA1B,EAAiBuB,SAQrBxB,EAAeI,MAAQV,EAAKU,MAAMwB,KAAI,SAACC,GAAQ,OAAOA,EAAGC,GAAG,IAExD3B,EAAeH,EAAeI,QAAQJ,EAAe+B,UAAUC,OAAO,+BAOxEhC,EAAee,iBAAiB,SAAS,SAACE,GAExC,SAASgB,EAAkBjD,GACzBiC,EAAME,OAAOf,MAAQpB,EAAIoB,MAAMwB,KAAI,SAACC,GAClC,OAAOA,EAAGC,GACZ,IACAb,EAAME,OAAOY,UAAUC,OAAO,+BAC9B9B,EAAeI,YAAcW,EAAME,OAAOf,MAAMS,MAClD,CDJG,IAAoBF,ECOnBR,EAAec,EAAME,OAAOf,QDPTO,ECQVjB,EAAKoC,IDPbT,MAAM,GAADhC,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBsB,GAAM,CAClD9B,QAASF,EAAOE,QAChByC,OAAQ,WAEXC,KAAKxC,ICKGwC,KAAKU,GACLR,OAAM,SAACS,GACNR,QAAQS,IAAID,EACd,IDrBD,SAAiBvB,GACtB,OAAOU,MAAM,GAADhC,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBsB,GAAM,CAClD9B,QAASF,EAAOE,QAChByC,OAAQ,QAEXC,KAAKxC,EACN,CCiBMqD,CAAQ1C,EAAKoC,KACVP,KAAKU,GACLR,OAAM,SAACS,GACNR,QAAQS,IAAID,EACd,GAEN,IAGAnC,EAAYgB,iBAAiB,SAvD7B,SAAkBC,GCqDb,IAAkBqB,EAAG9B,EAAME,EAANF,GAAH8B,EDpDX,CAAE9B,KAAMS,EAAIG,OAAOT,IAAKD,KAAMO,EAAIG,OAAOX,MCoD3BD,KAAME,EAAI4B,EAAJ5B,KAChC6B,EAAehC,YAAcC,EAC7BgC,EAAS/B,IAAMC,EACf8B,EAAS7B,IAAMH,EACfiC,EAAUC,EDvDV,IAuDO7C,CACT,CElGA,IAAM8C,EAAkBpE,SAASC,cAAc,oBACzCoE,EAAiBrE,SAASC,cAAc,mBACxCqE,EAAgBtE,SAASC,cAAc,mBAMtC,SAASsE,EAAiBR,GAAe,IAAb9B,EAAI8B,EAAJ9B,KAAKuC,EAAKT,EAALS,MAEpCJ,EAAgBpC,YAAcC,EAC9BoC,EAAerC,YAAcwC,CAE/B,CAEO,SAASC,EAASC,GAAW,IAATC,EAAMD,EAANC,OACzBL,EAAcpC,IAAMyC,CACtB,CDHF,IAAMC,EAAoB5E,SAASC,cAAc,oBAC3C4E,EAAoB7E,SAASC,cAAc,kBAE3C6E,EAAe9E,SAASC,cAAc,kBACtC8E,EAAcF,EAAkB5E,cAAc,oBAC9C+E,EAAmBD,EAAY9E,cAAc,kBAC7CgF,EAAkBF,EAAY9E,cAAc,iBAG3C,SAASiE,EAAUgB,GACxBA,EAAMzB,UAAU0B,IAAI,gBAEpBnF,SAASyC,iBAAiB,UAAW2C,GAErCF,EAAMzC,iBAAiB,QAAS4C,EAClC,CAGO,SAASD,EAAc1C,GACZ,WAAZA,EAAI4C,KAGNC,EADoBvF,SAASC,cAAc,iBAG/C,CAEO,SAASoF,EAAgB3C,GAC1BA,EAAI8C,gBAAkB9C,EAAIG,QAC5B0C,EAAW7C,EAAI8C,cAEnB,CAGO,SAASD,EAAWL,GACzBA,EAAMzB,UAAUP,OAAO,gBACvBlD,SAASyF,oBAAoB,UAAWL,GACxCF,EAAMO,oBAAoB,QAASJ,EACrC,CACqBrF,SAAS0F,iBAAiB,wBAClCC,SAAQ,SAACC,GACpB,IAAMV,EAAQU,EAAO9C,QAAQ,UAE7B8C,EAAOnD,iBAAiB,SAAS,kBAAM8C,EAAWL,EAAM,GAC1D,IAGA,IAAMW,EAAa7F,SAASC,cAAc,gBAEpC6F,EAAYD,EAAW5F,cAAc,kBAErC8F,EAAW/F,SAASC,cAAc,kBAClC+F,EAAgBD,EAAS9F,cAAc,uBACvCgG,EAAgBF,EAAS9F,cAAc,uBAEvCiG,EAAgBH,EAAS9F,cAAc,iBAG7C8F,EAAStD,iBAAiB,UAAU,SAAUE,GF9CtB,IAACwD,EE+CvBxD,EAAMyD,kBF/CiBD,EEkDd,CAAElE,KAAM+D,EAAcK,MAAOlE,KAAM8D,EAAcI,OFjDnDtD,MAAM,GAADhC,OAAIV,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,QAChByC,OAAQ,OACRsD,KAAMC,KAAKC,UAAUL,KAGpBlD,KAAKxC,IE6CLwC,MAAK,SAAC7B,EAAMC,GAEXnB,EADgBiB,EAAWC,EAAMC,IAEjCkE,EAAWM,GACXE,EAASU,OACX,IACCtD,OAAM,SAACS,GACNR,QAAQS,IAAID,EACd,GACJ,IAGA,IAAMO,EAAanE,SAASC,cAAc,iBACpCgE,EAAWE,EAAWlE,cAAc,iBACpC+D,EAAiBG,EAAWlE,cAAc,qBASzBD,SAASC,cAAc,wBAU/BwC,iBAAiB,SARzB,WACDqD,EAAUY,gBACZR,EAAcS,UAAW,EAEzBT,EAAcS,UAAW,EAE3BzC,EAAU2B,EACZ,IAgBAjB,EAAkBnC,iBAAiB,SAZ5B,WACDsC,EAAY2B,gBACdR,EAAcS,UAAW,EAEzBT,EAAcS,UAAW,EAE3B,IAAAC,EClHO,CAAC3E,KAAMmC,EAAgBpC,YAAawC,MAAOH,EAAerC,aDkHzDC,EAAI2E,EAAJ3E,KAAMuC,EAAKoC,EAALpC,MACdQ,EAAiBqB,MAAQpE,EACzBgD,EAAgBoB,MAAQ7B,EAExBN,EAAUY,EACZ,IAGA,IAAM+B,EAAsB9B,EAAY9E,cAAc,iBAsB/C,SAAS6G,EAAqBlB,EAAQmB,GAC3CnB,EAAO5D,YAAc+E,CACvB,CALAhC,EAAYtC,iBAAiB,UAhBtB,SAAiCC,GF5EjC,IAAsByD,EE6E3BzD,EAAI0D,iBACJU,EAAqBD,EAAqB,kBF9EfV,EEgFd,CAAElE,KAAM+C,EAAiBqB,MAAO7B,MAAOS,EAAgBoB,OF/E7DtD,MAAM,GAADhC,OAAIV,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,QAChByC,OAAQ,QACRsD,KAAMC,KAAKC,UAAUL,KAExBlD,KAAKxC,IE2EDwC,MAAK,SAAC+D,GACLzC,EAAkByC,GAClBzB,EAAWV,EACb,IACC1B,OAAM,SAACS,GACNR,QAAQS,IAAID,EACd,IACCqD,SAAQ,WACPH,EAAqBD,EAAqB,YAC5C,GACJ,IASA,IElIIxF,EFkIE6F,EAAclH,SAASC,cAAc,iBACrCkH,EAAaD,EAAYjH,cAAc,mBACvCmH,EAAcD,EAAWlH,cAAc,yBACvCoH,EAAqBrH,SAASC,cAAc,2BAC5CqH,EAAmBH,EAAWlH,cAAc,mBGjI3C,SAASsH,EAAaC,EAAaC,GACpCD,EAAYd,gBACde,EAAiBd,UAAW,EAE5Bc,EAAiBd,UAAW,CAEhC,C,0GHsIAU,EAAmB5E,iBAAiB,SAR7B,WACD0E,EAAWT,gBACbR,EAAcS,UAAW,EAEzBT,EAAcS,UAAW,EAE3BzC,EAAUgD,EACZ,IAqBAC,EAAW1E,iBAAiB,UAjB5B,SAAgCE,GF7FzB,IAAqBwD,EE8F1BxD,EAAMyD,iBACNU,EAAqBQ,EAAkB,kBF/FbnB,EEiGd,CAAExB,OAAQyC,EAAYf,OFhG3BtD,MAAM,GAADhC,OAAIV,EAAOC,QAAO,oBAAoB,CAChDC,QAASF,EAAOE,QAChByC,OAAQ,QACRsD,KAAMC,KAAKC,UAAUL,KAExBlD,KAAKxC,IE4FDwC,MAAK,SAAC0B,GACLF,EAAUE,GACVY,EAAW2B,EACb,IACC/D,OAAM,SAACS,GACNR,QAAQS,IAAID,EACd,IACCqD,SAAQ,WACPH,EAAqBQ,EAAkB,YACzC,GACJ,IE3JEzG,QAAQ6G,IAAI,CJdL3E,MAAM,GAADhC,OAAIV,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,QAChByC,OAAQ,QAETC,KAAKxC,GAyBCsC,MAAM,GAADhC,OAAIV,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,QAChByC,OAAQ,QAETC,KAAKxC,KIhBHwC,MAAK,SAAAc,GAAmB,I,IAAAW,G,EAAA,E,4CAAAX,I,o2BAAjB4D,EAAKjD,EAAA,GAAEsC,EAAItC,EAAA,GACDsC,EAARxD,IACRnC,EAAS2F,EAAKxD,IACde,EAAkByC,GAClBvC,EAAUuC,GAEVW,EAAMC,UAAUjC,SAAQ,SAACvE,GACvBlB,EAAQiB,EAAWC,EAAMC,GAC3B,GACF,IACC8B,OAAM,SAACS,GACNR,QAAQS,IAAID,EACd,ICMG,SAA0BvD,GACdL,SAAS0F,iBAAiBrF,EAAOwH,cACzClC,SAAQ,SAAC6B,IAlBb,SAA0BA,EAAanH,GAE5C,IAAMyH,EAAYN,EAAY9B,iBAAiBrF,EAAO0H,oBAChDN,EAAmBD,EAAYvH,cACnCI,EAAO2H,sBAETT,EAAaC,EAAaC,GAC1BK,EAAUnC,SAAQ,SAACsC,GACjBA,EAAaxF,iBAAiB,SAAS,YA9BpC,SAAoB+E,EAAaS,EAAc5H,GAChD4H,EAAaC,SAASC,MAPrB,SAAmBX,EAAaS,EAAc5H,GAChCmH,EAAYvH,cAAc,UAAYgI,EAAa5F,IAC3DL,YAAc,GACzBiG,EAAaxE,UAAUP,OAAO7C,EAAO+H,gBACvC,CAIIC,CAAUb,EAAaS,EAAc5H,GAflC,SAAmBmH,EAAaS,EAAcK,EAAcjI,GAC9CmH,EAAYvH,cAAc,UAAYgI,EAAa5F,IAC3DL,YAAcsG,EACzBL,EAAaxE,UAAU0B,IAAI9E,EAAO+H,gBACpC,CAaIG,CACEf,EACAS,EACAA,EAAaO,kBACbnI,EAGN,CAoBMoI,CAAWjB,EAAaS,EAAc5H,GAEtCkH,EAAaC,EAAaC,EAC5B,GACF,GACF,CAKIiB,CAAiBlB,EAAanH,EAChC,GACF,CDNAsI,CN9CgC,CAE9Bd,aAAc,QAEdE,mBAAoB,eACpBC,qBAAsB,qBACtBI,gBAAiB,sB","sources":["webpack://mesto-project-bootcamp/./src/components/constants.js","webpack://mesto-project-bootcamp/./src/components/section.js","webpack://mesto-project-bootcamp/./src/components/api.js","webpack://mesto-project-bootcamp/./src/components/card.js","webpack://mesto-project-bootcamp/./src/components/modal.js","webpack://mesto-project-bootcamp/./src/components/profile.js","webpack://mesto-project-bootcamp/./src/pages/script.js","webpack://mesto-project-bootcamp/./src/components/validate.js"],"sourcesContent":["//попап для отображения изображения\n//const photoFigure = photoPopup.querySelector(\".photo__figure\");\n//const buttonPhotoClose = photoPopup.querySelector(\".js-close-photo\");\n//кнопка закрытия формы профиля\n//const buttonCloseProfile = document.querySelector(\".js-close-form\");\n\n\n//cоздадим объект для: классов/объектов/селекторов(чтобы исчезла привязка)\nexport const configValidation = {\n  //cелектор,по которому выбираются формы(первое свойство)\n  formSelector: \".form\",\n  //чтобы выбрать все инпуты b тд\n  inputFieldSelector: \".form__field\",\n  buttonSubmitSelector: \".form__button-save\",\n  inputErrorClass: \"form__field_active\",\n};\n\n//массив\n/* export const initialCards = [\n  {\n    name: \"Архыз\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n  },\n  {\n    name: \"Челябинская область\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n  },\n  {\n    name: \"Иваново\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n  },\n  {\n    name: \"Камчатка\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n  },\n  {\n    name: \"Холмогорский район\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n  },\n  {\n    name: \"Байкал\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n  },\n]; */\n","export const itemSection = document.querySelector(\".elements-grid\");\n\nexport function addItem(newItem) {\n  itemSection.prepend(newItem);\n}\n\n","//модуль,отвечающий за работу с сервером\n\nconst config = {\n  baseUrl: 'https://nomoreparties.co/v1/wbf-cohort-7',\n  headers: {\n    authorization: '5c0ea949-1e0d-409c-aab2-ad8dda3585dc',\n    'Content-Type': 'application/json'\n  }\n}\n\nfunction checkResponse(res) {\n    //получили ответ,если ок,то взяли json==>на этом апи заканчивается,берет json/общение между нами и сервером\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис//возвращаем промисы через которые then получаем данные\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const getCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n    method: \"GET\",\n  })\n  .then(checkResponse)\n}\n\nexport const setCards = (data) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n    method: \"POST\",\n    body: JSON.stringify(data)\n      //чтобы передеать данные нам нужны обратные действия,т.е нужно наш объект преобразовать в строку(тот объект,который сервер поймет)\n  })\n    .then(checkResponse);\n}\n\n //для удаления нужно id,чтобы понимать что именно удалять\nexport const deleteCards = (id) => {\n  //если операции с одним каким-то элементом ,то в путь добавляем его id\n  return fetch(`${config.baseUrl}/cards/${id}`, {\n    headers: config.headers,\n    method: \"DELETE\"\n  })\n  .then(checkResponse)\n}\n\n\nexport const getProfileServer = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n    method: \"GET\",\n  })\n  .then(checkResponse)\n}\n\nexport function patchProfile(data) {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n    method: \"PATCH\",\n    body: JSON.stringify(data)\n})\n.then(checkResponse)\n}\n\nexport function setLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    headers: config.headers,\n    method: \"PUT\",\n})\n.then(checkResponse)\n}\n\nexport function deleteLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    headers: config.headers,\n    method: \"DELETE\",\n})\n.then(checkResponse)\n}\n\nexport function patchAvatar(data) {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    headers: config.headers,\n    method: \"PATCH\",\n    body: JSON.stringify(data)\n})\n.then(checkResponse)\n}\n\n\n\n\n\n\n","import {\n  openFormCards,\n  closePopup,\n  itemSection,\n  openPhoto,\n  cardItem,\n} from \"./modal\";\nimport { toggleButton } from \"./validate\";\nimport { deleteCards, deleteLike, setLike } from \"./api\";\nimport { userId, initialInfo } from \"../pages/script\";\n\nconst itemTemplate = document\n  .querySelector(\".item-template\")\n  .content.querySelector(\".element\");\n\n//удаление карточки\nexport function deleteItem(event) {\n  event.target.closest(\".element\").remove();\n}\n\n//перенос объектов из модального окна и образование карточек\nexport function createItem(card, userId) {\n  //template для карточек и разметка для них\n  const cardItem = document.querySelector(\".element\");\n  //const cardNewElement = itemTemplate.cloneNode(true);\n  const newItemCard = itemTemplate.cloneNode(true);\n  const itemName = newItemCard.querySelector(\".element__caption\");\n  const itemPicture = newItemCard.querySelector(\".element__picture\");\n  const buttonLikeCard = newItemCard.querySelector(\".js-like-element\");\n  const buttonDeleteCard = newItemCard.querySelector(\".js-delete-element\");\n  const itemNumberLike = newItemCard.querySelector(\".element__number-like\");\n\n\n  //делаем контейнер и перенос данных\n  itemName.textContent = card.name;\n  itemPicture.src = card.link;\n  itemPicture.alt = card.name;\n  itemPicture.id = card.cardId;\n  //возвращаем вол-во элементов в массиве\n  itemNumberLike.textContent = card.likes.length;\n\n\n  function openItem(evt) {\n    openPhoto({ name: evt.target.alt, link: evt.target.src });\n  }\n\n  if (userId === card.owner[\"_id\"]) {\n    buttonDeleteCard.addEventListener(\"click\", (evt) => {\n      const currentIdCard = evt.target.closest(\".element\").querySelector(\".element__picture\").id;\n      deleteCards(currentIdCard).then(deleteItem(evt)).catch(console.dir);\n    })\n  } else {\n    buttonDeleteCard.remove();\n  }\n\n/* const massivLikes = card.likes;\nmassivLikes.array.forEach(element => {\n  if (element._id === userId)\n});\n */\nbuttonLikeCard.likes = card.likes.map((el) =>{ return el._id})\n\nif (containLikesMy(buttonLikeCard.likes)) buttonLikeCard.classList.toggle(\"element__button-like_active\");\n\n  function containLikesMy(likes) {\n    //используем метод includes,чтобы убедитьсяб,что объект находится в массиве\n    return likes.includes(userId);\n  }\n\n  buttonLikeCard.addEventListener(\"click\", (event) => {\n    //здесь мы берем результат(res) и из него по новой запрашиваем сколько у нас лайков и проставляем кол-во\n    function changeLikeSection(res) {\n      event.target.likes = res.likes.map((el) => {\n        return el._id;\n      });\n      event.target.classList.toggle(\"element__button-like_active\");\n      itemNumberLike.textContent = event.target.likes.length;\n    }\n\n    //установка или удаление лайков как запрос из апи,в then прописываем обновление самого лайка\n    if (containLikesMy(event.target.likes)) {\n      deleteLike(card._id)\n      //в then всегда получаем новый массив,поэтому в ф-ции changeLikeSection\n        .then(changeLikeSection)\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setLike(card._id)\n        .then(changeLikeSection)\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  });\n\n  //слушатели на фотографии\n  itemPicture.addEventListener(\"click\", openItem);\n\n  return newItemCard;\n}\n\n//itemSection.append(cardNewElement)\n","import { configValidation } from \"./constants\";\nimport {\n  checkValid,\n  toggleButton,\n  showError,\n  hideError,\n  setEventListener,\n  checkValidity,\n} from \"./validate\";\nimport { addItem } from \"../components/section\";\nimport { createItem } from \"./card\";\nimport { getProfileInfo, changeProfileInfo, setAvatar } from \"./profile\";\nimport { setCards, patchProfile, patchAvatar } from \"./api\";\n\n\n//редактирование профиля\nconst buttonEditProfile = document.querySelector(\".js-edit-profile\");\nconst blockPopupProfile = document.querySelector(\".popup-profile\");\n//модальное окно для профиля\nconst profilePopup = document.querySelector(\".popup-profile\");\nconst formProfile = blockPopupProfile.querySelector(\".js-form-profile\");\nconst nameInputProfile = formProfile.querySelector(\".js-input-name\");\nconst jobInputProfile = formProfile.querySelector(\".js-input-job\");\n\n//открытие попапов\nexport function openPopup(popup) {\n  popup.classList.add(\"popup_opened\");\n  //добавили класс попапа и обработчик Esc\n  document.addEventListener(\"keydown\", closePopupEsc);\n  //аналогично с кликом\n  popup.addEventListener(\"click\", closePopupClick);\n}\n\n//закрытие на эск\nexport function closePopupEsc(evt) {\n  if (evt.key === \"Escape\") {\n    //находим отркеытое модальное окно,которое потом бдуем передовать аргументом\n    const openedPopup = document.querySelector(\".popup_opened\");\n    closePopup(openedPopup);\n  }\n}\n//закрытие на клик\nexport function closePopupClick(evt) {\n  if (evt.currentTarget === evt.target) {\n    closePopup(evt.currentTarget);\n  }\n}\n\n//закрытие попапов и все кнопки с крестиком\nexport function closePopup(popup) {\n  popup.classList.remove(\"popup_opened\");\n  document.removeEventListener(\"keydown\", closePopupEsc);\n  popup.removeEventListener(\"click\", closePopupClick);\n}\nconst closeButtons = document.querySelectorAll(\".popup__button-close\");\ncloseButtons.forEach((button) => {\n  const popup = button.closest(\".popup\");\n\n  button.addEventListener(\"click\", () => closePopup(popup));\n});\n\n//модальное окно для карточек\nconst cardsPopup = document.querySelector(\".popup-cards\");\n//форма карточек\nconst formCards = cardsPopup.querySelector(\".js-form-cards\");\n\nconst itemForm = document.querySelector(\".js-form-cards\");\nconst inputCardName = itemForm.querySelector(\".js-input-text-card\");\nconst inputCardLink = itemForm.querySelector(\".js-input-link-card\");\n//кнопка сохранить у формы места\nconst buttonAddCard = itemForm.querySelector(\".js-save-card\");\n\n//сабмит для карточки\nitemForm.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  //добавляем ф-цию,передаем туда данные из поля ввода\n\n  setCards({ name: inputCardName.value, link: inputCardLink.value })\n    //сервер вернул нам ответ//из него взяли name и link и создали карточку\n    .then((card, userId) => {\n      const newItem = createItem(card, userId);\n      addItem(newItem);\n      closePopup(cardsPopup);\n      itemForm.reset();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n});\n\n//попап для отображения изображения\nconst photoPopup = document.querySelector(\".popup-photos\");\nconst photoImg = photoPopup.querySelector(\".popup__photo\");\nconst photoFigaption = photoPopup.querySelector(\".popup__figaption\");\n//открыть фото\nexport function openPhoto({ name, link }) {\n  photoFigaption.textContent = name;\n  photoImg.src = link;\n  photoImg.alt = name;\n  openPopup(photoPopup);\n}\n\nconst buttonOpenCard = document.querySelector(\".profile__button-add\");\n//открытие попапа для карточек\nexport function openFormCards() {\n  if (formCards.checkValidity()) {\n    buttonAddCard.disabled = false;\n  } else {\n    buttonAddCard.disabled = true;\n  }\n  openPopup(cardsPopup);\n}\nbuttonOpenCard.addEventListener(\"click\", openFormCards);\n\n//открытие попапа профиля\nexport function openFormProfile() {\n  if (formProfile.checkValidity()) {\n    buttonAddCard.disabled = false;\n  } else {\n    buttonAddCard.disabled = true;\n  }\n  const { name, about } = getProfileInfo();\n  nameInputProfile.value = name;\n  jobInputProfile.value = about;\n\n  openPopup(profilePopup);\n}\nbuttonEditProfile.addEventListener(\"click\", openFormProfile);\n\nconst buttonSubmitProfile = formProfile.querySelector(\".js-save-form\");\n\n//сабмит для профиля\nexport function handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  loadingButtonCaption(buttonSubmitProfile, \"Сохранение...\");\n\n  patchProfile({ name: nameInputProfile.value, about: jobInputProfile.value })\n    .then((user) => {\n      changeProfileInfo(user);\n      closePopup(blockPopupProfile);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      loadingButtonCaption(buttonSubmitProfile, \"Сохранить\");\n    });\n}\nformProfile.addEventListener(\"submit\", handleProfileFormSubmit);\n\n//меняем текст у кнокпи\nexport function loadingButtonCaption(button, caption) {\n  button.textContent = caption;\n}\n\n//редактирование аватара\nconst avatarPopup = document.querySelector(\".popup-avatar\");\nconst formAvatar = avatarPopup.querySelector(\".js-form-avatar\");\nconst inputAvatar = formAvatar.querySelector(\".js-input-link-avatar\");\nconst buttonChangeAvatar = document.querySelector(\".profile__button-avatar\");\nconst buttonSaveAvatar = formAvatar.querySelector(\".js-save-avatar\");\n\n//открытие попапа аватара\nexport function openFormAvatar() {\n  if (formAvatar.checkValidity()) {\n    buttonAddCard.disabled = false;\n  } else {\n    buttonAddCard.disabled = true;\n  }\n  openPopup(avatarPopup);\n}\nbuttonChangeAvatar.addEventListener(\"click\", openFormAvatar);\n\n//сабмит для аватара\nfunction handleAvatarFormSubmit(event) {\n  event.preventDefault();\n  loadingButtonCaption(buttonSaveAvatar, \"Сохранение...\");\n\n  patchAvatar({ avatar: inputAvatar.value })\n    .then((avatar) => {\n      setAvatar(avatar);\n      closePopup(avatarPopup);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      loadingButtonCaption(buttonSaveAvatar, \"Сохранить\");\n    });\n}\n\nformAvatar.addEventListener(\"submit\", handleAvatarFormSubmit);\n","import { getProfileServer } from \"../components/api\"\n\nconst nameProfileHtml = document.querySelector(\".js-name-profile\");\nconst jobProfileHtml = document.querySelector(\".js-job-profile\");\nconst avatarProfile = document.querySelector(\".profile__image\");\n\nexport function getProfileInfo() {\n  return {name: nameProfileHtml.textContent, about: jobProfileHtml.textContent};\n  }\n\nexport function changeProfileInfo({name,about}) {\n\n    nameProfileHtml.textContent = name;\n    jobProfileHtml.textContent = about;\n\n  }\n\n  export function setAvatar({avatar}) {\n    avatarProfile.src = avatar;\n  }\n","import \"./index.css\";\n\nimport { configValidation } from \"../components/constants\";\n\nimport { enableValidation } from \"../components/validate\";\n\nimport { createItem, buttonDeleteCard, deleteItem } from \"../components/card\";\n\nimport { addItem, itemSection } from \"../components/section\";\n\nimport {\n  getCards,\n  setCards,\n  getProfileServer,\n  patchProfile,\n  getAvatarServer,\n} from \"../components/api\";\n\nimport {\n  changeProfileInfo,\n  getProfileInfo,\n  setAvatar,\n} from \"../components/profile\";\n\nimport { cardItem, openFormAvatar } from \"../components/modal\";\n\nlet userId;\n\n//нам нужно,что когда мы получили карточки,то профиль уже был.тк объект,который приходит с карточек,то нам нужно отличать свои карточки от чужих//будем сравнивать owner,id с id текущего пользователя\nexport function initialInfo() {\n  //показываем,что оба запроса выполнились(успешно)//в массиве мб неограниченное кол-во запросов,которые будут выполняться в промисе\n  //из запросов функций создаем массив\n  //деструктиризация кода-когда сложный объект разбираешь на части сразу присваивая значения отдельным переменным\n  //ф-ция,которая возвращает промис,потому вызыввем ф-ции внутри\n  Promise.all([getCards(), getProfileServer()])\n    //два результата также в массиве\n    //then это функция(лямбда)\n    .then(([cards, user]) => {\n      const { _id } = user;\n      userId = user._id;\n      changeProfileInfo(user);\n      setAvatar(user);\n      //cейчас получаем карточку\n      cards.reverse().forEach((card) => {\n        addItem(createItem(card, userId));\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\ninitialInfo();\n\n//включаем валидации,настройки передаем при вызове\nenableValidation(configValidation);\n\n/* ////используем модуль\ngetCards()\n  //нужно подождать данные прежде,чем получить-выполнить действие только, когда сервер вернет данные\n  .then((res) => {\n    //console.log(res)\n    //массив рес//перебрали каждый элемент,взяли из объектов name и link и передали ф-цию createItem\n    res.forEach((arrayItem) => {\n      const newItem = createItem({\n        name: arrayItem.name,\n        link: arrayItem.link,\n      });\n      addItem(newItem);\n    });\n  });\n */\n\n/* //выносим массив в секцию для карт\ninitialCards.forEach((arrayItem) => {\n  const newItem = createItem(arrayItem);\n  addItem(newItem);\n}); */\n\n/* //обработка необработанного отклонения промисов\nwindow.addEventListener(\"unhandledrejection\", (evt) => {\n  console.error(\"Необработанная ошибка.\\nМесто возникновения: \");\n  console.error(evt.promise);\n  console.error(\"Информация об ошибке:\");\n  console.error(evt.reason);\n}); */\n","import { configValidation } from \"../components/constants\";\nimport { openPopup } from \"../components/modal\";\n\n//найдем спан,в котором показывает ошибку/выводим текст ошибки/передали .validationMessage\nexport function showError(formElement, inputElement, errorMessage, config) {\n  const errorField = formElement.querySelector(\"#error-\" + inputElement.id);\n  errorField.textContent = errorMessage;\n  inputElement.classList.add(config.inputErrorClass);\n}\n\n//очищаем текст ошибки\nexport function hideError(formElement, inputElement, config) {\n  const ErrorField = formElement.querySelector(\"#error-\" + inputElement.id);\n  ErrorField.textContent = \"\";\n  inputElement.classList.remove(config.inputErrorClass);\n}\n//проверям-есть поле или нет/принимаем в параметры форму(проброс функции через эту)\nexport function checkValid(formElement, inputElement, config) {\n  if (inputElement.validity.valid) {\n    hideError(formElement, inputElement, config);\n  } else {\n    showError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      config\n    ); //взяли из инпута\n  }\n}\n\n//проверем валидна форма или нет\nexport function toggleButton(formElement, buttonSubmitForm) {\n  if (formElement.checkValidity()) {\n    buttonSubmitForm.disabled = false;\n  } else {\n    buttonSubmitForm.disabled = true;\n  }\n}\n\nexport function setEventListener(formElement, config) {\n  //проверяем инфу в момент реального времени,валидация полей/цикл,который вешает слушатель на любой инпут\n  const inputList = formElement.querySelectorAll(config.inputFieldSelector);\n  const buttonSubmitForm = formElement.querySelector(\n    config.buttonSubmitSelector\n  );\n  toggleButton(formElement, buttonSubmitForm);\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", () => {\n      checkValid(formElement, inputElement, config);\n      // записать функцию для активности доступа кнопки\n      toggleButton(formElement, buttonSubmitForm);\n    });\n  });\n}\n//в эту функцию примем объект с настройками(конфигуратор)\nexport function enableValidation(config) {\n  const formList = document.querySelectorAll(config.formSelector);\n  formList.forEach((formElement) => {\n    setEventListener(formElement, config); //пробрасываем конфиг в дргуие функции\n  });\n}\n"],"names":["itemSection","document","querySelector","addItem","newItem","prepend","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","itemTemplate","content","createItem","card","userId","newItemCard","cloneNode","itemName","itemPicture","buttonLikeCard","buttonDeleteCard","itemNumberLike","containLikesMy","likes","includes","textContent","name","src","link","alt","id","cardId","length","owner","addEventListener","evt","event","currentIdCard","target","closest","fetch","method","then","remove","catch","console","dir","map","el","_id","classList","toggle","changeLikeSection","err","log","setLike","_ref","photoFigaption","photoImg","openPopup","photoPopup","nameProfileHtml","jobProfileHtml","avatarProfile","changeProfileInfo","about","setAvatar","_ref2","avatar","buttonEditProfile","blockPopupProfile","profilePopup","formProfile","nameInputProfile","jobInputProfile","popup","add","closePopupEsc","closePopupClick","key","closePopup","currentTarget","removeEventListener","querySelectorAll","forEach","button","cardsPopup","formCards","itemForm","inputCardName","inputCardLink","buttonAddCard","data","preventDefault","value","body","JSON","stringify","reset","checkValidity","disabled","_getProfileInfo","buttonSubmitProfile","loadingButtonCaption","caption","user","finally","avatarPopup","formAvatar","inputAvatar","buttonChangeAvatar","buttonSaveAvatar","toggleButton","formElement","buttonSubmitForm","all","cards","reverse","formSelector","inputList","inputFieldSelector","buttonSubmitSelector","inputElement","validity","valid","inputErrorClass","hideError","errorMessage","showError","validationMessage","checkValid","setEventListener","enableValidation"],"sourceRoot":""}