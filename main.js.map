{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-bootcamp/webpack/bootstrap","webpack://mesto-project-bootcamp/webpack/runtime/define property getters","webpack://mesto-project-bootcamp/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-bootcamp/./src/components/constants.js","webpack://mesto-project-bootcamp/./src/components/section.js","webpack://mesto-project-bootcamp/./src/components/api.js","webpack://mesto-project-bootcamp/./src/components/card.js","webpack://mesto-project-bootcamp/./src/components/profile.js","webpack://mesto-project-bootcamp/./src/pages/script.js","webpack://mesto-project-bootcamp/./src/components/modal.js","webpack://mesto-project-bootcamp/./src/components/validate.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","//попап для отображения изображения\n//const photoFigure = photoPopup.querySelector(\".photo__figure\");\n//const buttonPhotoClose = photoPopup.querySelector(\".js-close-photo\");\n//кнопка закрытия формы профиля\n//const buttonCloseProfile = document.querySelector(\".js-close-form\");\n\n\n//cоздадим объект для: классов/объектов/селекторов(чтобы исчезла привязка)\nexport const configValidation = {\n  //cелектор,по которому выбираются формы(первое свойство)\n  formSelector: \".form\",\n  //чтобы выбрать все инпуты b тд\n  inputFieldSelector: \".form__field\",\n  buttonSubmitSelector: \".form__button-save\",\n  inputErrorClass: \"form__field_active\",\n};\n\n//массив\n/* export const initialCards = [\n  {\n    name: \"Архыз\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n  },\n  {\n    name: \"Челябинская область\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n  },\n  {\n    name: \"Иваново\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n  },\n  {\n    name: \"Камчатка\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n  },\n  {\n    name: \"Холмогорский район\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n  },\n  {\n    name: \"Байкал\",\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n  },\n]; */\n","export const itemSection = document.querySelector(\".elements-grid\");\n\nexport function addItem(newItem) {\n  itemSection.prepend(newItem);\n}\n\n","//модуль,отвечающий за работу с сервером\n\nconst config = {\n  baseUrl: 'https://nomoreparties.co/v1/wbf-cohort-7',\n  headers: {\n    authorization: '5c0ea949-1e0d-409c-aab2-ad8dda3585dc',\n    'Content-Type': 'application/json'\n  }\n}\n\nfunction checkResponse(res) {\n    //получили ответ,если ок,то взяли json==>на этом апи заканчивается,берет json/общение между нами и сервером\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис//возвращаем промисы через которые then получаем данные\n    return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const getCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n    method: \"GET\",\n  })\n  .then(checkResponse)\n}\n\nexport const setCards = (data) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers,\n    method: \"POST\",\n    body: JSON.stringify(data)\n      //чтобы передеать данные нам нужны обратные действия,т.е нужно наш объект преобразовать в строку(тот объект,который сервер поймет)\n  })\n    .then(checkResponse);\n}\n\n //для удаления нужно id,чтобы понимать что именно удалять\nexport const deleteCards = (id) => {\n  //если операции с одним каким-то элементом ,то в путь добавляем его id\n  return fetch(`${config.baseUrl}/cards/${id}`, {\n    headers: config.headers,\n    method: \"DELETE\"\n  })\n  .then(checkResponse)\n}\n\n\nexport const getProfileServer = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n    method: \"GET\",\n  })\n  .then(checkResponse)\n}\n\nexport function patchProfile(data) {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers,\n    method: \"PATCH\",\n    body: JSON.stringify(data)\n})\n.then(checkResponse)\n}\n\nexport function setLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    headers: config.headers,\n    method: \"PUT\",\n})\n.then(checkResponse)\n}\n\nexport function deleteLike(id) {\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\n    headers: config.headers,\n    method: \"DELETE\",\n})\n.then(checkResponse)\n}\n\nexport function patchAvatar(data) {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    headers: config.headers,\n    method: \"PATCH\",\n    body: JSON.stringify(data)\n})\n.then(checkResponse)\n}\n\n\n\n\n\n\n","import {\n  openFormCards,\n  closePopup,\n  itemSection,\n  cardItem,\n} from \"./modal\";\nimport { toggleButton } from \"./validate\";\nimport { deleteCards, deleteLike, setLike } from \"./api\";\nimport { userId, initialInfo,openPhoto } from \"../pages/script\";\n\nconst itemTemplate = document\n  .querySelector(\".item-template\")\n  .content.querySelector(\".element\");\n\n//удаление карточки\nexport function deleteItem(event) {\n  event.target.closest(\".element\").remove();\n}\n\n//перенос объектов из модального окна и образование карточек\nexport function createItem(card, userId) {\n  //template для карточек и разметка для них\n  const cardItem = document.querySelector(\".element\");\n  //const cardNewElement = itemTemplate.cloneNode(true);\n  const newItemCard = itemTemplate.cloneNode(true);\n  const itemName = newItemCard.querySelector(\".element__caption\");\n  const itemPicture = newItemCard.querySelector(\".element__picture\");\n  const buttonLikeCard = newItemCard.querySelector(\".js-like-element\");\n  const buttonDeleteCard = newItemCard.querySelector(\".js-delete-element\");\n  const itemNumberLike = newItemCard.querySelector(\".element__number-like\");\n\n\n  //делаем контейнер и перенос данных\n  itemName.textContent = card.name;\n  itemPicture.src = card.link;\n  itemPicture.alt = card.name;\n  itemPicture.id = card.cardId;\n  //возвращаем вол-во элементов в массиве\n  itemNumberLike.textContent = card.likes.length;\n\n\n  function openItem(evt) {\n    openPhoto({ name: evt.target.alt, link: evt.target.src });\n  }\n\n  if (userId === card.owner._id) {\n    buttonDeleteCard.addEventListener(\"click\", (evt) => {\n      deleteCards(card._id)\n      .then(deleteItem(evt))\n      .catch((err) => {\n        console.log(err);\n      })\n    })\n  } else {\n    buttonDeleteCard.remove();\n  }\n\n/* const massivLikes = card.likes;\nmassivLikes.array.forEach(element => {\n  if (element._id === userId)\n});\n */\nbuttonLikeCard.likes = card.likes.map((el) =>{ return el._id})\n\nif (containLikesMy(buttonLikeCard.likes)) buttonLikeCard.classList.toggle(\"element__button-like_active\");\n\n  function containLikesMy(likes) {\n    //используем метод includes,чтобы убедитьсяб,что объект находится в массиве\n    return likes.includes(userId);\n  }\n\n  buttonLikeCard.addEventListener(\"click\", (event) => {\n    //здесь мы берем результат(res) и из него по новой запрашиваем сколько у нас лайков и проставляем кол-во\n    function changeLikeSection(res) {\n      event.target.likes = res.likes.map((el) => {\n        return el._id;\n      });\n      event.target.classList.toggle(\"element__button-like_active\");\n      itemNumberLike.textContent = event.target.likes.length;\n    }\n\n    //установка или удаление лайков как запрос из апи,в then прописываем обновление самого лайка\n    if (containLikesMy(event.target.likes)) {\n      deleteLike(card._id)\n      //в then всегда получаем новый массив,поэтому в ф-ции changeLikeSection\n        .then(changeLikeSection)\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setLike(card._id)\n        .then(changeLikeSection)\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  });\n\n  //слушатели на фотографии\n  itemPicture.addEventListener(\"click\", openItem);\n\n  return newItemCard;\n}\n\n//itemSection.append(cardNewElement)\n","import { getProfileServer } from \"../components/api\"\n\nconst nameProfileHtml = document.querySelector(\".js-name-profile\");\nconst jobProfileHtml = document.querySelector(\".js-job-profile\");\nconst avatarProfile = document.querySelector(\".profile__image\");\n\nexport function getProfileInfo() {\n  return {name: nameProfileHtml.textContent, about: jobProfileHtml.textContent};\n  }\n\nexport function changeProfileInfo({name,about}) {\n\n    nameProfileHtml.textContent = name;\n    jobProfileHtml.textContent = about;\n\n  }\n\n  export function setAvatar({avatar}) {\n    avatarProfile.src = avatar;\n  }\n","import \"./index.css\";\n\nimport { configValidation } from \"../components/constants\";\n\nimport { enableValidation } from \"../components/validate\";\n\nimport { createItem, buttonDeleteCard, deleteItem } from \"../components/card\";\n\nimport { addItem, itemSection } from \"../components/section\";\n\nimport {\n  getCards,\n  setCards,\n  getProfileServer,\n  patchProfile,\n  getAvatarServer,\n  patchAvatar\n} from \"../components/api\";\n\nimport {\n  changeProfileInfo,\n  getProfileInfo,\n  setAvatar,\n} from \"../components/profile\";\n\nimport { cardItem, openPopup, closePopup } from \"../components/modal\";\n\nlet userId;\n\n//нам нужно,что когда мы получили карточки,то профиль уже был.тк объект,который приходит с карточек,то нам нужно отличать свои карточки от чужих//будем сравнивать owner,id с id текущего пользователя\nexport function initialInfo() {\n  //показываем,что оба запроса выполнились(успешно)//в массиве мб неограниченное кол-во запросов,которые будут выполняться в промисе\n  //из запросов функций создаем массив\n  //деструктиризация кода-когда сложный объект разбираешь на части сразу присваивая значения отдельным переменным\n  //ф-ция,которая возвращает промис,потому вызыввем ф-ции внутри\n  Promise.all([getCards(), getProfileServer()])\n    //два результата также в массиве\n    //then это функция(лямбда)\n    .then(([cards, user]) => {\n      const { _id } = user;\n      userId = user._id;\n      changeProfileInfo(user);\n      setAvatar(user);\n      //cейчас получаем карточку\n      cards.reverse().forEach((card) => {\n        addItem(createItem(card, userId));\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\ninitialInfo();\n\n//включаем валидации,настройки передаем при вызове\nenableValidation(configValidation);\n\n\n//редактирование профиля\nconst buttonEditProfile = document.querySelector(\".js-edit-profile\");\nconst blockPopupProfile = document.querySelector(\".popup-profile\");\n//модальное окно для профиля\nconst profilePopup = document.querySelector(\".popup-profile\");\nconst formProfile = blockPopupProfile.querySelector(\".js-form-profile\");\nconst nameInputProfile = formProfile.querySelector(\".js-input-name\");\nconst jobInputProfile = formProfile.querySelector(\".js-input-job\");\n\n//модальное окно для карточек\nconst cardsPopup = document.querySelector(\".popup-cards\");\n//форма карточек\nconst formCards = cardsPopup.querySelector(\".js-form-cards\");\n\nconst itemForm = document.querySelector(\".js-form-cards\");\nconst inputCardName = itemForm.querySelector(\".js-input-text-card\");\nconst inputCardLink = itemForm.querySelector(\".js-input-link-card\");\n//кнопка сохранить у формы места\nconst buttonAddCard = itemForm.querySelector(\".js-save-card\");\n\n//сабмит для карточки\nitemForm.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n  loadingButtonCaption(buttonAddCard, \"Создание...\");\n   //добавляем ф-цию,передаем туда данные из поля ввода\n  setCards({ name: inputCardName.value, link: inputCardLink.value })\n    //сервер вернул нам ответ//из него взяли name и link и создали карточку\n    .then((card) => {\n      const newItem = createItem(card, userId);\n      addItem(newItem);\n      closePopup(cardsPopup);\n      itemForm.reset();\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      loadingButtonCaption(buttonAddCard, \"Создать\");\n    });\n});\n\n//попап для отображения изображения\nconst photoPopup = document.querySelector(\".popup-photos\");\nconst photoImg = photoPopup.querySelector(\".popup__photo\");\nconst photoFigaption = photoPopup.querySelector(\".popup__figaption\");\n//открыть фото\nexport function openPhoto({ name, link }) {\n  photoFigaption.textContent = name;\n  photoImg.src = link;\n  photoImg.alt = name;\n  openPopup(photoPopup);\n}\n\nconst buttonOpenCard = document.querySelector(\".profile__button-add\");\n//открытие попапа для карточек\nexport function openFormCards() {\n  if (formCards.checkValidity()) {\n    buttonAddCard.disabled = false;\n  } else {\n    buttonAddCard.disabled = true;\n  }\n  openPopup(cardsPopup);\n}\nbuttonOpenCard.addEventListener(\"click\", openFormCards);\n\n//открытие попапа профиля\nexport function openFormProfile() {\n  if (formProfile.checkValidity()) {\n    buttonAddCard.disabled = false;\n  } else {\n    buttonAddCard.disabled = true;\n  }\n  const { name, about } = getProfileInfo();\n  nameInputProfile.value = name;\n  jobInputProfile.value = about;\n\n  openPopup(profilePopup);\n}\nbuttonEditProfile.addEventListener(\"click\", openFormProfile);\n\nconst buttonSubmitProfile = formProfile.querySelector(\".js-save-form\");\n\n//сабмит для профиля\nexport function handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  loadingButtonCaption(buttonSubmitProfile, \"Сохранение...\");\n\n  patchProfile({ name: nameInputProfile.value, about: jobInputProfile.value })\n    .then((user) => {\n      changeProfileInfo(user);\n      closePopup(blockPopupProfile);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      loadingButtonCaption(buttonSubmitProfile, \"Сохранить\");\n    });\n}\nformProfile.addEventListener(\"submit\", handleProfileFormSubmit);\n\n//меняем текст у кнокпи\nexport function loadingButtonCaption(button, caption) {\n  button.textContent = caption;\n}\n\n//редактирование аватара\nconst avatarPopup = document.querySelector(\".popup-avatar\");\nconst formAvatar = avatarPopup.querySelector(\".js-form-avatar\");\nconst inputAvatar = formAvatar.querySelector(\".js-input-link-avatar\");\nconst buttonChangeAvatar = document.querySelector(\".profile__button-avatar\");\nconst buttonSaveAvatar = formAvatar.querySelector(\".js-save-avatar\");\n\n//открытие попапа аватара\nexport function openFormAvatar() {\n  if (formAvatar.checkValidity()) {\n    buttonAddCard.disabled = false;\n  } else {\n    buttonAddCard.disabled = true;\n  }\n  openPopup(avatarPopup);\n}\nbuttonChangeAvatar.addEventListener(\"click\", openFormAvatar);\n\n//сабмит для аватара\nfunction handleAvatarFormSubmit(event) {\n  event.preventDefault();\n  loadingButtonCaption(buttonSaveAvatar, \"Сохранение...\");\n\n  patchAvatar({ avatar: inputAvatar.value })\n    .then((avatar) => {\n      setAvatar(avatar);\n      closePopup(avatarPopup);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      loadingButtonCaption(buttonSaveAvatar, \"Сохранить\");\n    });\n}\n\nformAvatar.addEventListener(\"submit\", handleAvatarFormSubmit);\n\n\n\n\n\n\n\n\n\n\n\n\n/* ////используем модуль\ngetCards()\n  //нужно подождать данные прежде,чем получить-выполнить действие только, когда сервер вернет данные\n  .then((res) => {\n    //console.log(res)\n    //массив рес//перебрали каждый элемент,взяли из объектов name и link и передали ф-цию createItem\n    res.forEach((arrayItem) => {\n      const newItem = createItem({\n        name: arrayItem.name,\n        link: arrayItem.link,\n      });\n      addItem(newItem);\n    });\n  });\n */\n\n/* //выносим массив в секцию для карт\ninitialCards.forEach((arrayItem) => {\n  const newItem = createItem(arrayItem);\n  addItem(newItem);\n}); */\n\n/* //обработка необработанного отклонения промисов\nwindow.addEventListener(\"unhandledrejection\", (evt) => {\n  console.error(\"Необработанная ошибка.\\nМесто возникновения: \");\n  console.error(evt.promise);\n  console.error(\"Информация об ошибке:\");\n  console.error(evt.reason);\n}); */\n","import { configValidation } from \"./constants\";\nimport {\n  checkValid,\n  toggleButton,\n  showError,\n  hideError,\n  setEventListener,\n  checkValidity,\n} from \"./validate\";\nimport { addItem } from \"../components/section\";\nimport { createItem } from \"./card\";\nimport { getProfileInfo, changeProfileInfo, setAvatar } from \"./profile\";\nimport { setCards, patchProfile, patchAvatar } from \"./api\";\n\n\n//открытие попапов\nexport function openPopup(popup) {\n  popup.classList.add(\"popup_opened\");\n  //добавили класс попапа и обработчик Esc\n  document.addEventListener(\"keydown\", closePopupEsc);\n  //аналогично с кликом\n  popup.addEventListener(\"click\", closePopupClick);\n}\n\n//закрытие на эск\nexport function closePopupEsc(evt) {\n  if (evt.key === \"Escape\") {\n    //находим отркеытое модальное окно,которое потом бдуем передовать аргументом\n    const openedPopup = document.querySelector(\".popup_opened\");\n    closePopup(openedPopup);\n  }\n}\n//закрытие на клик\nexport function closePopupClick(evt) {\n  if (evt.currentTarget === evt.target) {\n    closePopup(evt.currentTarget);\n  }\n}\n\n//закрытие попапов и все кнопки с крестиком\nexport function closePopup(popup) {\n  popup.classList.remove(\"popup_opened\");\n  document.removeEventListener(\"keydown\", closePopupEsc);\n  popup.removeEventListener(\"click\", closePopupClick);\n}\nconst closeButtons = document.querySelectorAll(\".popup__button-close\");\ncloseButtons.forEach((button) => {\n  const popup = button.closest(\".popup\");\n\n  button.addEventListener(\"click\", () => closePopup(popup));\n});\n\n\n","import { configValidation } from \"../components/constants\";\nimport { openPopup } from \"../components/modal\";\n\n//найдем спан,в котором показывает ошибку/выводим текст ошибки/передали .validationMessage\nexport function showError(formElement, inputElement, errorMessage, config) {\n  const errorField = formElement.querySelector(\"#error-\" + inputElement.id);\n  errorField.textContent = errorMessage;\n  inputElement.classList.add(config.inputErrorClass);\n}\n\n//очищаем текст ошибки\nexport function hideError(formElement, inputElement, config) {\n  const ErrorField = formElement.querySelector(\"#error-\" + inputElement.id);\n  ErrorField.textContent = \"\";\n  inputElement.classList.remove(config.inputErrorClass);\n}\n//проверям-есть поле или нет/принимаем в параметры форму(проброс функции через эту)\nexport function checkValid(formElement, inputElement, config) {\n  if (inputElement.validity.valid) {\n    hideError(formElement, inputElement, config);\n  } else {\n    showError(\n      formElement,\n      inputElement,\n      inputElement.validationMessage,\n      config\n    ); //взяли из инпута\n  }\n}\n\n//проверем валидна форма или нет\nexport function toggleButton(formElement, buttonSubmitForm) {\n  if (formElement.checkValidity()) {\n    buttonSubmitForm.disabled = false;\n  } else {\n    buttonSubmitForm.disabled = true;\n  }\n}\n\nexport function setEventListener(formElement, config) {\n  //проверяем инфу в момент реального времени,валидация полей/цикл,который вешает слушатель на любой инпут\n  const inputList = formElement.querySelectorAll(config.inputFieldSelector);\n  const buttonSubmitForm = formElement.querySelector(\n    config.buttonSubmitSelector\n  );\n  toggleButton(formElement, buttonSubmitForm);\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener(\"input\", () => {\n      checkValid(formElement, inputElement, config);\n      // записать функцию для активности доступа кнопки\n      toggleButton(formElement, buttonSubmitForm);\n    });\n  });\n}\n//в эту функцию примем объект с настройками(конфигуратор)\nexport function enableValidation(config) {\n  const formList = document.querySelectorAll(config.formSelector);\n  formList.forEach((formElement) => {\n    setEventListener(formElement, config); //пробрасываем конфиг в дргуие функции\n  });\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","itemSection","document","querySelector","addItem","newItem","prepend","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","itemTemplate","content","createItem","card","userId","newItemCard","cloneNode","itemName","itemPicture","buttonLikeCard","buttonDeleteCard","itemNumberLike","containLikesMy","likes","includes","textContent","name","src","link","alt","id","cardId","length","owner","_id","addEventListener","evt","event","fetch","method","then","target","closest","remove","catch","err","console","log","map","el","classList","toggle","changeLikeSection","setLike","openPhoto","nameProfileHtml","jobProfileHtml","avatarProfile","changeProfileInfo","_ref","about","setAvatar","_ref2","avatar","openPopup","popup","add","closePopupEsc","closePopupClick","closePopup","currentTarget","removeEventListener","toggleButton","formElement","buttonSubmitForm","checkValidity","disabled","querySelectorAll","forEach","button","all","cards","user","reverse","formSelector","inputList","inputFieldSelector","buttonSubmitSelector","inputElement","validity","valid","inputErrorClass","hideError","errorMessage","showError","validationMessage","checkValid","setEventListener","enableValidation","buttonEditProfile","blockPopupProfile","profilePopup","formProfile","nameInputProfile","jobInputProfile","cardsPopup","formCards","itemForm","inputCardName","inputCardLink","buttonAddCard","data","preventDefault","loadingButtonCaption","value","body","JSON","stringify","reset","finally","photoPopup","photoImg","photoFigaption","_ref3","_getProfileInfo","buttonSubmitProfile","caption","avatarPopup","formAvatar","inputAvatar","buttonChangeAvatar","buttonSaveAvatar"],"sourceRoot":""}